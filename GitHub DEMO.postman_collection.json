{
	"info": {
		"_postman_id": "900cff7d-a0ac-4eab-a9bb-12ad1cf4b8ea",
		"name": "GitHub DEMO",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20941144"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "SINGLE_Issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function() {\r",
									"    pm.expect(pm.response.code, \"Status code\").to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check status code other way\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check status\", function() {\r",
									"    pm.expect(pm.response.status).to.equal(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue URL\", function() {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.url, \"URL property\").to.equal(\"https://api.github.com/repos/BozhinovDancho/PostmanDemo/issues/5\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue number\", function() {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.number, \"Number property\").to.equal(5);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue ID\", function() {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.id, \"id property\").to.equal(1234228840);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BozhinovDancho",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/4",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "ALL_Issues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var body = pm.response.json();\r",
									"console.log(body[2]);\r",
									"\r",
									"pm.test(\"Check body length\", function(){\r",
									"   //pm.expext(body.length, \"Body length property\").to.be.equal(5);\r",
									"pm.expect(body[5].title).to.include(\"issue\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check status code\", function(){\r",
									"pm.expect(pm.response.code).to.equal(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Check status\", function(){\r",
									"pm.expect(pm.response.status).to.equal(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"HTTP status code\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue URL\", function(){\r",
									"pm.expect(body.url, \"URL property\").to.equal,\"https://api.github.com/repos/BozhinovDancho/PostmanDemo/issues/1\";\r",
									"});\r",
									"\r",
									"pm.test(\"Check body length\", function() {\r",
									"    pm.expect(body.length).to.equal(14);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve_comments_of_issue #24",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BozhinovDancho",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/24/comments",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"24",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve_Comment_ByID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BozhinovDancho",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/24#issuecomment-1126715368",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"24"
							],
							"hash": "issuecomment-1126715368"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Create_Issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json();\r",
									"let number = body.number;\r",
									"console.log(\"BODY: \", body);\r",
									"\r",
									"pm.test(\"Check status code\", function() {\r",
									"    pm.expect(pm.response.code, \"Status code\").to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Check status code other way\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Check status\", function() {\r",
									"    pm.expect(pm.response.status).to.equal(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue URL\", function() {\r",
									"    let url = \"https://api.github.com/repos/BozhinovDancho/PostmanDemo/issues/\" + number;\r",
									"    pm.expect(body.url, \"URL property\").to.equal(url);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue number\", function() {\r",
									"    pm.expect(body.number, \"Number property\").to.be.greaterThan(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue ID\", function() {\r",
									"    pm.expect(body.id, \"ID property\").to.be.greaterThan(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue title\", function() {\r",
									"    pm.expect(body.title).to.contain('Issue')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BozhinovDancho",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"title\": \"Issue from Postman\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_Issue_WithLabels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json();\r",
									"let number = body.number;\r",
									"console.log(\"BODY: \", body);\r",
									"\r",
									"pm.test(\"Check status code\", function() {\r",
									"    pm.expect(pm.response.code, \"Status code\").to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Check status code other way\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Check status\", function() {\r",
									"    pm.expect(pm.response.status).to.equal(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue URL\", function() {\r",
									"    let url = \"https://api.github.com/repos/BozhinovDancho/PostmanDemo/issues/\" + number;\r",
									"    pm.expect(body.url, \"URL property\").to.equal(url);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue number\", function() {\r",
									"    pm.expect(body.number, \"Number property\").to.be.greaterThan(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue ID\", function() {\r",
									"    pm.expect(body.id, \"ID property\").to.be.greaterThan(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue title\", function() {\r",
									"    pm.expect(body.title).to.contain('Issue')\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue label\", function() {\r",
									"    pm.expect(body.labels[0].name).to.equal('bug');\r",
									"    pm.expect(body.labels[0].id).to.be.greaterThan(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BozhinovDancho",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"title\": \"Issue from Postman with labels\", \"labels\": [\"bug\", \"UI\", \"user\", \"with token\"]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_Comment_For_Issue#10",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BozhinovDancho",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"Test-comment again from Postman\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/10/comments",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"10",
								"comments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UPDATE (PATCH)",
			"item": [
				{
					"name": "Update_TitleAndLabelsForIssue#4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json();\r",
									"let number = body.number;\r",
									"console.log(\"BODY: \", body);\r",
									"\r",
									"pm.test(\"Check status code\", function() {\r",
									"    pm.expect(pm.response.code, \"Status code\").to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check status\", function() {\r",
									"    pm.expect(pm.response.status).to.equal(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue title\", function() {\r",
									"    pm.expect(body.title).to.contain('Updated')\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue label\", function() {\r",
									"    pm.expect(body.labels[0].name).to.equal('bug');\r",
									"    pm.expect(body.labels[0].id).to.be.greaterThan(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BozhinovDancho",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Edited issue: Updated title of the issue\", \"labels\": [\"New\", \"Bug\", \"Updated from Postman\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/4",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"4"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "Delete_Issue",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BozhinovDancho",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/30",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"30"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Postman_TestScriptExamples_Info",
			"request": {
				"method": "VIEW",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "https://learning.postman.com/docs/writing-scripts/script-references/test-examples/"
				},
				"url": {
					"raw": "Postman_TestScriptExamples",
					"host": [
						"Postman_TestScriptExamples"
					]
				}
			},
			"response": []
		}
	]
}